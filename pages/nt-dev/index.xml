<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NT kernel development introduction on GeoB99 Website</title><link>https://sigwait.github.io/GeoB99.github.io/pages/nt-dev/</link><description>Recent content in NT kernel development introduction on GeoB99 Website</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 05 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://sigwait.github.io/GeoB99.github.io/pages/nt-dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to the NT kernel development - Security Manager (Access Tokens - Part 4.1)</title><link>https://sigwait.github.io/GeoB99.github.io/pages/nt-dev/nt-internals-part-4/</link><pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate><guid>https://sigwait.github.io/GeoB99.github.io/pages/nt-dev/nt-internals-part-4/</guid><description>Introduction A user logs into the computer typing their credentials, performs day to day life tasks like surfing the web, play video games, write mails, do work related stuff and whatnot. Sometimes it might have happened that a user has to do certain tasks that only can be done in an elevated process, or that is, a user temporarily acquires privilege elevation to perform such tasks until the job is done.</description></item><item><title>Introduction to the NT kernel development (Part 3)</title><link>https://sigwait.github.io/GeoB99.github.io/pages/nt-dev/nt-internals-part-3/</link><pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate><guid>https://sigwait.github.io/GeoB99.github.io/pages/nt-dev/nt-internals-part-3/</guid><description>Introduction In the previous chapters I have shown and explained some of the theoretical aspects of the NT kernel, its design and first and foremost, the concept behind the &amp;ldquo;Executive&amp;rdquo; that rules the kernel and its microkernel-ish foundation. In this chapter of &amp;ldquo;Introduction to the NT kernel development&amp;rdquo; we&amp;rsquo;ll now be focusing on how to write code for the kernel for the first time, compiling it, debugging it and whatnot. In the future chapters we&amp;rsquo;ll be focusing on each subsystem of the kernel individually piece by piece of the Executive, their specific purpose, how to code and act accordingly to them, reverse engineering tips and such.</description></item><item><title>Introduction to the NT kernel development (Part 2)</title><link>https://sigwait.github.io/GeoB99.github.io/pages/nt-dev/nt-internals-part-2/</link><pubDate>Sat, 08 May 2021 00:00:00 +0000</pubDate><guid>https://sigwait.github.io/GeoB99.github.io/pages/nt-dev/nt-internals-part-2/</guid><description>In this chapter we&amp;rsquo;ll cover some further topics about the NT kernel, namely the system calls interface in NT, the basic data types used, function conventions and syntax topology of the prefix routines and the startup and shutdown mechanism procedure of the kernel.
Topology of the routine prefixes in the NT kernel The more you explore around the kernel you may find a plethora of functions across different components of the kernel that adhere to a set of rules regarding function prefixing.</description></item><item><title>Introduction to the NT kernel development (Part 1)</title><link>https://sigwait.github.io/GeoB99.github.io/pages/nt-dev/nt-internals-part-1/</link><pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate><guid>https://sigwait.github.io/GeoB99.github.io/pages/nt-dev/nt-internals-part-1/</guid><description>Introduction &amp;ldquo;Introduction to the NT kernel development&amp;rdquo; is a collection of articles and guidelines for novice people who know coding and OS development but are unfamiliar with the tenets of NT and its principles. Such collection covers theoretical aspects, focusing primarily on the internal specifications and their purpose of the kernel, the overall infrastructure of the kernel, rules and remarks to be addressed whilst contributing for the NT kernel as well as advanced programming topics and whatnot.</description></item></channel></rss>