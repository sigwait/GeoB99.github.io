<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GeoB99's Homepage on</title><link>https://sigwait.github.io/GeoB99.github.io/</link><description>Recent content in GeoB99's Homepage on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 05 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://sigwait.github.io/GeoB99.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Understanding Blue Screens of Death (Part 1)</title><link>https://sigwait.github.io/GeoB99.github.io/pages/blue-screen/</link><pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate><guid>https://sigwait.github.io/GeoB99.github.io/pages/blue-screen/</guid><description>Introduction Ahh, those blue screens. Everybody hates them and so do you. Especially when you&amp;rsquo;re in the middle of something, like doing important work and out of a sudden a BSoD pops up leaving all of your unsaved work lost forever. It&amp;rsquo;s so frustrating, isn&amp;rsquo;t it? Despite this, Windows (and ReactOS as well) have multitude of reasons why the system has to be brought to a crash and in this article I&amp;rsquo;ll cover the general tenets and aspects of the blue screen.</description></item><item><title>First time Git setup</title><link>https://sigwait.github.io/GeoB99.github.io/pages/first-setup-git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sigwait.github.io/GeoB99.github.io/pages/first-setup-git/</guid><description>Git SCM installation Brief Introduction Git is a powerful distributed version control (DVC) software used for tracking development workflow of a project. It provides a full-fledged tracking history and Git is generally easy to use. As the ReactOS project infrastructure relies on Git for software development and patch contributions, this tutorial aims primarly on how to install Git SCM and do a basic user configuration.
NOTE: Git SCM is a Git utility that uses CLI (command line interface) as the primary UI for Git interactions.</description></item><item><title>Introduction to the NT kernel development (Part 1)</title><link>https://sigwait.github.io/GeoB99.github.io/pages/nt-internals-part-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sigwait.github.io/GeoB99.github.io/pages/nt-internals-part-1/</guid><description>## Introduction
&amp;ldquo;Introduction to the NT kernel development&amp;rdquo; is a collection of articles and guidelines for novice people who know coding and OS development but are unfamiliar with the tenets of NT and its principles. Such collection covers theoretical aspects, focusing primarily on the internal specifications and their purpose of the kernel, the overall infrastructure of the kernel, rules and remarks to be addressed whilst contributing for the NT kernel as well as advanced programming topics and whatnot.</description></item><item><title>Introduction to the NT kernel development (Part 2)</title><link>https://sigwait.github.io/GeoB99.github.io/pages/nt-internals-part-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sigwait.github.io/GeoB99.github.io/pages/nt-internals-part-2/</guid><description>In this chapter we&amp;rsquo;ll cover some further topics about the NT kernel, namely the system calls interface in NT, the basic data types used, function conventions and syntax topology of the prefix routines and the startup and shutdown mechanism procedure of the kernel.
## Topology of the routine prefixes in the NT kernel
The more you explore around the kernel you may find a plethora of functions across different components of the kernel that adhere to a set of rules regarding function prefixing.</description></item><item><title>Understanding Blue Screens of Death (Part 2)</title><link>https://sigwait.github.io/GeoB99.github.io/pages/blue-screen-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sigwait.github.io/GeoB99.github.io/pages/blue-screen-2/</guid><description>In the part 1 of the article I&amp;rsquo;ve discussed what&amp;rsquo;s a blue screen, the contents and their meaning behind a blue screen, how a blue screen works internally and finally what are the differences between Windows 9x and NT blue screen internal implementation. And now, in this article I&amp;rsquo;ll cover the baisc techniques to troubleshoot a bugcheck using WinDBG and how to read a memory crash dump.
Troubleshoot a bugcheck with WinDBG WinDBG is a powerful tool for debugging PE (Portable Executable) files, namely executable process ones (file extension being .</description></item></channel></rss>